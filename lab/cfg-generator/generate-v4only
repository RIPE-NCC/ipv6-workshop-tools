#!/bin/bash

# Go to my own directory
MY_DIR=$(dirname "$0")
cd "${MY_DIR}"
MY_DIR=$(pwd -P)

# Check command line
if [[ "$1" != [1-9] ]]; then
	echo "---------"
	echo "- Usage -"
	echo "---------"
	echo "$0 <pop-count>"
	echo ""
	echo "Where <pop-count> is a number from 1 to 9"
	echo ""
	exit 1
fi

POP_COUNT="$1"

echo "-----------------------------------------------"
echo "- Generating v4only configurations for ${POP_COUNT} pops -"
echo "-----------------------------------------------"

DIR="../working/cfg-v4only"
echo "Writing to ${DIR}"
mkdir -p ${DIR}
rm -f ../${DIR}/*.cfg

echo -n "- Basic configuration:"
for SWITCH in `seq 1 2`; do
	TPL="templates/v4only/core-switch.cfg"
	CFG="SW${SWITCH}.cfg"
	echo -n " ${CFG}"

	sed -e "s/\${SWITCH}/${SWITCH}/g" < ${TPL} > ${DIR}/${CFG}
done
echo ""

for POP in `seq 1 ${POP_COUNT}`; do
	echo "- POP ${POP}:"
	echo -n "  - Basic configuration:"
	for ROUTER in `seq 1 3`; do
		TPL="templates/v4only/pop-router.cfg"
		CFG="POP${POP}-R${ROUTER}.cfg"
		echo -n " ${CFG}"
		
		# Start with the template
		sed -e "s/\${POP}/${POP}/g" -e "s/\${ROUTER}/${ROUTER}/g" < ${TPL} > ${DIR}/${CFG}
	done
	echo ""
	
	echo -n "  - Configuring interfaces:"
	
	CFG="POP${POP}-R1.cfg"
	echo -n " ${CFG}"
	cat >> ${DIR}/${CFG} <<EOF
interface f0/0
 description "Link to POP${POP}-R3"
 ip address 10.${POP}.1.10 255.255.255.252
 no shutdown
!
interface f0/1
 description "Link to POP${POP}-R2"
 ip address 10.${POP}.1.1 255.255.255.252
 no shutdown
!
router bgp 65530
 address-family ipv4
  neighbor 10.${POP}.0.2 peer-group POP${POP}-iBGP-IPv4
  neighbor 10.${POP}.0.3 peer-group POP${POP}-iBGP-IPv4
!
EOF

	CFG="POP${POP}-R2.cfg"
	echo -n " ${CFG}"
	cat >> ${DIR}/${CFG} <<EOF
interface f0/0
 description "Link to POP${POP}-R1"
 ip address 10.${POP}.1.2 255.255.255.252
 no shutdown
!
interface f0/1
 description "Link to POP${POP}-R3"
 ip address 10.${POP}.1.5 255.255.255.252
 no shutdown
!
interface e1/0
 ip address 10.0.1.${POP} 255.255.255.192
 ip ospf 1 area 0.0.0.0
 ip ospf message-digest-key 1 md5 R04d5how-C0RE
 no shutdown
!
interface e1/1
 ip address 10.0.2.${POP} 255.255.255.192
 ip ospf 1 area 0.0.0.0
 ip ospf message-digest-key 1 md5 R04d5how-C0RE
 no shutdown
!
router ospf 1
 area 0.0.0.0 authentication message-digest
 area ${POP}.0.0.0 nssa default-information-originate no-summary
 no passive-interface e1/0
 no passive-interface e1/1
!
router bgp 65530
 address-family ipv4
  neighbor POP${POP}-iBGP-IPv4 route-reflector-client
  neighbor 10.${POP}.0.1 peer-group POP${POP}-iBGP-IPv4
  neighbor 10.${POP}.0.3 peer-group POP${POP}-iBGP-IPv4
  neighbor Core-iBGP-IPv4 peer-group
  neighbor Core-iBGP-IPv4 remote-as 65530
  neighbor Core-iBGP-IPv4 update-source Loopback0
EOF

	for OTHER_POP in `seq 1 ${POP_COUNT}`; do
		if [ "${POP}" != "${OTHER_POP}" ]; then
			echo "  neighbor 10.${OTHER_POP}.0.2 peer-group Core-iBGP-IPv4" >> ${DIR}/${CFG}
		fi
	done

	cat >> ${DIR}/${CFG} <<EOF
 !
!
EOF

	CFG="POP${POP}-R3.cfg"
	echo -n " ${CFG}"
	cat >> ${DIR}/${CFG} <<EOF
interface f0/0
 description "Link to POP${POP}-R2"
 ip address 10.${POP}.1.6 255.255.255.252
 no shutdown
!
interface f0/1
 description "Link to POP${POP}-R1"
 ip address 10.${POP}.1.9 255.255.255.252
 no shutdown
!
router bgp 65530
 address-family ipv4
  neighbor 10.${POP}.0.1 peer-group POP${POP}-iBGP-IPv4
  neighbor 10.${POP}.0.2 peer-group POP${POP}-iBGP-IPv4
!
EOF

	echo ""
done

echo ""
